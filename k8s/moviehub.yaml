# MovieHub Kubernetes部署配置
# 用于生产环境的Kubernetes集群部署

apiVersion: v1
kind: Namespace
metadata:
  name: moviehub
  labels:
    name: moviehub
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: moviehub-config
  namespace: moviehub
data:
  NODE_ENV: "production"
  AGGREGATION_URL: "http://aggregation-service:3004"
  LLM_URL: "http://llm-service:3001"
  USER_URL: "http://user-service:3005"
  TMDB_URL: "http://tmdb-service:3002"
  OMDB_URL: "http://omdb-service:3003"
  TVMAZE_URL: "http://tvmaze-service:3006"
  REDIS_URL: "redis://redis-service:6379"
---
apiVersion: v1
kind: Secret
metadata:
  name: moviehub-secrets
  namespace: moviehub
type: Opaque
data:
  TMDB_API_KEY: <base64-encoded-key>
  OMDB_API_KEY: <base64-encoded-key>
  QWEN_API_KEY: <base64-encoded-key>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: moviehub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
        command: ["redis-server", "--appendonly", "yes"]
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: moviehub
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: moviehub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: moviehub
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway
        image: moviehub-api-gateway:latest
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: moviehub-config
        - secretRef:
            name: moviehub-secrets
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
  namespace: moviehub
spec:
  selector:
    app: api-gateway
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-client
  namespace: moviehub
spec:
  replicas: 2
  selector:
    matchLabels:
      app: web-client
  template:
    metadata:
      labels:
        app: web-client
    spec:
      containers:
      - name: web-client
        image: moviehub-web-client:latest
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: web-client-service
  namespace: moviehub
spec:
  selector:
    app: web-client
  ports:
  - port: 80
    targetPort: 80
  type: LoadBalancer




