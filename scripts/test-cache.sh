#!/bin/bash

# Redis ÁºìÂ≠òÊµãËØïËÑöÊú¨
# È™åËØÅÁºìÂ≠òÊòØÂê¶Ê≠£Â∏∏Â∑•‰Ωú

set -e

GATEWAY_URL="${GATEWAY_URL:-http://localhost:3000}"

echo "üß™ MovieHub Cache Testing Script"
echo "=================================="
echo "Gateway URL: $GATEWAY_URL"
echo ""

# È¢úËâ≤ÂÆö‰πâ
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# ÊµãËØïÊêúÁ¥¢ÁºìÂ≠ò
echo "üìù Test 1: Search Cache"
echo "----------------------"

QUERY="dune"
echo "Searching for: $QUERY"

echo -e "${YELLOW}First request (cache miss expected):${NC}"
time curl -s "$GATEWAY_URL/api/search?query=$QUERY" > /dev/null
echo ""

echo -e "${YELLOW}Second request (cache hit expected):${NC}"
time curl -s "$GATEWAY_URL/api/search?query=$QUERY" > /dev/null
echo ""

# ÊµãËØïÁÉ≠Èó®ÊêúÁ¥¢
echo "üìä Test 2: Popular Searches"
echo "-------------------------"

# ÂèëÈÄÅÂ§ö‰∏™ÊêúÁ¥¢ËØ∑Ê±Ç
for query in "inception" "interstellar" "the matrix" "avatar" "titanic"; do
    curl -s "$GATEWAY_URL/api/search?query=$query" > /dev/null
    echo "‚úì Searched: $query"
done
echo ""

# Ëé∑ÂèñÁÉ≠Èó®ÊêúÁ¥¢
echo "Getting popular searches:"
POPULAR=$(curl -s "$GATEWAY_URL/api/analytics/popular-searches?limit=5")
echo "$POPULAR" | jq '.data' || echo "$POPULAR"
echo ""

# ÊµãËØïÁºìÂ≠òÁªüËÆ°
echo "üìà Test 3: Cache Statistics"
echo "-------------------------"
STATS=$(curl -s "$GATEWAY_URL/api/cache/stats")
echo "$STATS" | jq '.' || echo "$STATS"
echo ""

# ÊµãËØïÁîµÂΩ±ËØ¶ÊÉÖÁºìÂ≠ò
echo "üé¨ Test 4: Movie Details Cache"
echo "----------------------------"

# ÂÖàÊêúÁ¥¢Ëé∑Âèñ‰∏Ä‰∏™ÁîµÂΩ±ID
MOVIE_ID=$(curl -s "$GATEWAY_URL/api/search?query=dune" | jq -r '.data[0].id' 2>/dev/null || echo "")

if [ -n "$MOVIE_ID" ] && [ "$MOVIE_ID" != "null" ]; then
    echo "Testing movie details for ID: $MOVIE_ID"
    
    echo -e "${YELLOW}First request (cache miss expected):${NC}"
    time curl -s "$GATEWAY_URL/api/movie/$MOVIE_ID" > /dev/null
    echo ""
    
    echo -e "${YELLOW}Second request (cache hit expected):${NC}"
    time curl -s "$GATEWAY_URL/api/movie/$MOVIE_ID" > /dev/null
    echo ""
else
    echo "‚ö†Ô∏è  Could not get movie ID for testing"
fi

# ÊµãËØïÁºìÂ≠òÊ∏ÖÈô§
echo "üóëÔ∏è  Test 5: Cache Clearing"
echo "------------------------"

read -p "Do you want to clear the search cache? (y/N) " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    RESULT=$(curl -s -X DELETE "$GATEWAY_URL/api/cache/clear?type=search")
    echo "$RESULT" | jq '.' || echo "$RESULT"
    echo -e "${GREEN}‚úì Search cache cleared${NC}"
else
    echo "Skipped cache clearing"
fi
echo ""

echo "‚úÖ All tests completed!"
echo ""
echo "Tips:"
echo "  - Check Redis Commander: http://localhost:8081"
echo "  - View service logs: docker-compose logs -f api-gateway"
echo "  - Monitor Redis: docker exec -it moviehub-redis redis-cli MONITOR"



